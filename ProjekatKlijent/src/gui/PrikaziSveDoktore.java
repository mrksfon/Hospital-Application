/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package gui;

import doktorController.DoktorController;
import doktorController.DoktorFormController;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.print.Doc;
import javax.swing.JOptionPane;
import javax.swing.table.AbstractTableModel;
import javax.swing.table.TableModel;
import model.Doktor;
import models.DoktoriTableModel;

/**
 *
 * @author Marenda
 */
public class PrikaziSveDoktore extends javax.swing.JFrame {

    private DoktorController kontroler;

    /**
     * Creates new form PrikaziSveDoktore
     */
    public PrikaziSveDoktore() {
        initComponents();
        kontroler = new DoktorController();
        initForma();

    }

    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jTextFieldPretraga = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTableDoktori = new javax.swing.JTable();
        jButtonKreiraj = new javax.swing.JButton();
        jButtonIzmeni = new javax.swing.JButton();
        jButtonObrisi = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jLabel1.setText("Pretraga svih doktora: ");

        jTextFieldPretraga.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTextFieldPretragaKeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTextFieldPretragaKeyTyped(evt);
            }
        });

        jTableDoktori.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTableDoktori);

        jButtonKreiraj.setText("Kreiraj ");
        jButtonKreiraj.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonKreirajActionPerformed(evt);
            }
        });

        jButtonIzmeni.setText("Izmeni");
        jButtonIzmeni.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonIzmeniActionPerformed(evt);
            }
        });

        jButtonObrisi.setText("Obrisi");
        jButtonObrisi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonObrisiActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(109, 109, 109)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 345, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(33, 33, 33)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jTextFieldPretraga)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 433, Short.MAX_VALUE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jButtonKreiraj, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButtonIzmeni, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButtonObrisi, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(37, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextFieldPretraga, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButtonKreiraj))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jButtonIzmeni)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButtonObrisi))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 341, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(181, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jTextFieldPretragaKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldPretragaKeyPressed
        pretraga();
    }//GEN-LAST:event_jTextFieldPretragaKeyPressed

    private void jButtonIzmeniActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonIzmeniActionPerformed
        prikaziFormuZaIzmenu();
    }//GEN-LAST:event_jButtonIzmeniActionPerformed

    private void jButtonKreirajActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonKreirajActionPerformed
        try {
            kreirajDoktora();
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, ex.getMessage());
        }
    }//GEN-LAST:event_jButtonKreirajActionPerformed

    private void jTextFieldPretragaKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldPretragaKeyTyped
        pretraga();
    }//GEN-LAST:event_jTextFieldPretragaKeyTyped

    private void jButtonObrisiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonObrisiActionPerformed
        obrisiDoktora();
    }//GEN-LAST:event_jButtonObrisiActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonIzmeni;
    private javax.swing.JButton jButtonKreiraj;
    private javax.swing.JButton jButtonObrisi;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTableDoktori;
    private javax.swing.JTextField jTextFieldPretraga;
    // End of variables declaration//GEN-END:variables

    public void osvezi() {
        Thread thread = new Thread(new Runnable() {

            @Override
            public void run() {
                try {
                    populateTableDoktori(kontroler.loadAll());
                } catch (Exception ex) {
//                    JOptionPane.showMessageDialog(this, ex.getMessage());
                    ex.printStackTrace();
                }
            }
        });
        thread.start();
    }

    private void initForma() {
        try {
            List<Doktor> doktori = kontroler.loadAll();
            populateTableDoktori(doktori);
            jTableDoktori.setAutoCreateRowSorter(true);
        } catch (Exception ex) {
            ex.printStackTrace();
            JOptionPane.showMessageDialog(this, ex.getMessage());
        }
    }

    private void populateTableDoktori(List<Doktor> doktori) {
        AbstractTableModel model = new DoktoriTableModel(doktori);
        jTableDoktori.setModel(model);
    }

    private void prikaziFormuZaIzmenu() {
        int selectedRow = jTableDoktori.getSelectedRow();
        try {
            Integer id = getModel().getDoktor(selectedRow).getId();
            DoktorFormController.getInstance().openUpdateDoctorForm(id);
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, "Nije moguce otvoriti formu za izmenu" + ex.getMessage());
        }
    }

    private DoktoriTableModel getModel() {
        return (DoktoriTableModel) jTableDoktori.getModel();
    }

    private void kreirajDoktora() throws Exception {
        DoktorFormController.getInstance().openCreateDoctorForm();
    }

    private void pretraga() {
        String filter = jTextFieldPretraga.getText().trim();

        List<Doktor> doktori = kontroler.pretraga(filter);

        jTableDoktori.setModel(new DoktoriTableModel(doktori));
    }

    private void obrisiDoktora() {
        int selectedRow = jTableDoktori.getSelectedRow();
        try {

            Doktor d = getModel().getDoktor(selectedRow);
            Doktor obrisani = kontroler.delete(d);
            DoktorFormController.getInstance().doktorChanged();
            JOptionPane.showMessageDialog(this, "Doktor : " + obrisani.getIme() + " " + obrisani.getPrezime() + " je uspesno obrisan");
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, ex.getMessage());
        }
    }

}
